{"version":3,"sources":["Header.js","Request.js","Axios.js","Banner.js","Row.js","App.js","index.js"],"names":["Header","useState","show","handleShow","useEffect","window","addEventListener","scrollY","removeEventListener","className","src","alt","APIKEY","requests","fetchTreding","fetchNetFlixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorroMovies","fetchRomanticMovies","fetchDocumentaries","instance","axios","create","baseURL","Banner","str","n","movie","setMovie","a","Axios","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","orignal_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd6b2020.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./Header.css\"\r\n\r\nfunction Header() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => { //for scrolling...\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        })\r\n        return () => {\r\n            window.removeEventListener(\"scroll\")\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`header ${show && \"header__black\"}`}>\r\n            <img className=\"headerLogo\" src=\"images/logo.JPG\" alt=\"\" />\r\n            <img className=\"headerUserLogo\" src=\"images/userlogo.JPG\" alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const APIKEY = \"143bebe5e619280a37d188e20fe3a5ad\";\r\n\r\nconst requests = {\r\n    fetchTreding: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n    fetchNetFlixOriginals:`/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n    fetchHorroMovies:`/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n    fetchRomanticMovies:`/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${APIKEY}&with_genres=99`\r\n}\r\n\r\nexport default requests;","import axios from \"axios\"\r\n\r\nconst instance =axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance","import React, { useState, useEffect } from 'react'\r\nimport \"./Banner.css\"\r\nimport requests from './Request';\r\nimport Axios from \"./Axios\"\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await Axios.get(requests.fetchNetFlixOriginals) // adding 2 url i.e, axios+request\r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length) ])\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    console.log(movie);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <div className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n                backgroundPosition: \"center center\"}}>\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\"> {movie?.title || movie.name || movie?.orignal_name}</h1>\r\n                <div className=\"banner__Buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner__description\">{truncate(movie?.overview, 200)}</h1>\r\n            </div>\r\n            <div className=\"banner__fadebottom\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState, useEffect } from 'react'\r\nimport \"./Row.css\"\r\nimport Axios from './Axios'\r\nimport YouTube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([])\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await Axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n            console.log(request.data.results)\r\n            return request\r\n        }\r\n        fetchData()\r\n    }, [fetchUrl])\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n                .then((url) => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get('v'));\r\n                })\r\n                .catch(() => console.log('Temporary Unavailable'))\r\n        }\r\n    }\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {title}\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img\r\n                        key={movie.id}\r\n                        onClick={() => handleClick(movie)}\r\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                        src={`${baseUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                        alt={movie.name} />\r\n                ))}\r\n            </div>\r\n          \r\n                {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import './App.css';\nimport Header from \"./Header\"\nimport Banner from \"./Banner\"\nimport requests from './Request';\nimport Row from './Row';\nfunction App() {\n  return ( \n    <div className=\"App\">\n      <Header />  \n      <Banner />  \n      <Row isLargeRow={true} title=\"NETFLIX ORIGNALS\" fetchUrl={requests.fetchNetFlixOriginals} />\n      <Row title = \"Trending Now\" fetchUrl = {requests.fetchTreding}/>\n        <Row title = \"Top Rated\" fetchUrl = {requests.fetchTopRated}/>\n        <Row title = \"Action Movies\" fetchUrl = {requests.fetchActionMovies}/>\n        <Row title = \"Horror Movies\" fetchUrl = {requests.fetchHorroMovies}/>\n        <Row title = \"Comedy Movies\" fetchUrl = {requests.fetchComedyMovies}/>\n        <Row title = \"Romance Movies\" fetchUrl = {requests.fetchRomanticMovies}/>\n        <Row title = \"Documentaries\" fetchUrl = {requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}